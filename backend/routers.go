/*
 * Learn Words API
 *
 * API for learning words with insertion, modification, and practice features
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package main

import (
	"fmt"
	"net/http"
	"strings"
	"world_journey_backend/controllers"
	"world_journey_backend/middlewares"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func newRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = middlewares.Logger(handler)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/api/",
		Index,
	},

	/*Route{
		"LoginPost",
		strings.ToUpper("Post"),
		"/api/login",
		LoginPost,
	},

	Route{
		"LogoutUser",
		strings.ToUpper("Get"),
		"/api/user/logout",
		LogoutUser,
	},
	*/
	Route{
		"RegisterPost",
		strings.ToUpper("Post"),
		"/api/register",
		controllers.RegisterUser,
	},

	Route{
		"AddWordPost",
		strings.ToUpper("Post"),
		"/api/words",
		controllers.PostNewWord,
	},

	Route{
		"PracticeGet",
		strings.ToUpper("Get"),
		"/api/practice",
		controllers.GetRandomWords,
	},
	/*
		Route{
			"WordIdPut",
			strings.ToUpper("Put"),
			"/api/word/{id}",
			WordIdPut,
		},
	*/
	Route{
		"WordsGet",
		strings.ToUpper("Get"),
		"/api/words",
		controllers.GetAllWords,
	},
}
